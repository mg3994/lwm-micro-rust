# NGINX Configuration for LinkWithMentor Gateway with HTTP/3 Support
user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;

# Load dynamic modules for HTTP/3 support
load_module modules/ngx_http_v3_module.so;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;

    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 10M;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;

    # Upstream services
    upstream user_management {
        least_conn;
        server user-management:8000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream chat_service {
        least_conn;
        server chat:8000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream video_service {
        least_conn;
        server video:8000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream meetings_service {
        least_conn;
        server meetings:8000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream payment_service {
        least_conn;
        server payment:8000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream safety_service {
        least_conn;
        server safety:8000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # Main server block with HTTP/3 support
    server {
        listen 80;
        listen 443 ssl http2;
        listen 443 http3 reuseport;
        
        server_name linkwithmentor.local localhost;

        # SSL configuration
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;

        # HTTP/3 specific headers
        add_header Alt-Svc 'h3=":443"; ma=86400';
        add_header QUIC-Status $http3;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

        # CORS headers
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
        add_header Access-Control-Expose-Headers "Content-Length,Content-Range" always;

        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization";
            add_header Access-Control-Max-Age 1728000;
            add_header Content-Type "text/plain; charset=utf-8";
            add_header Content-Length 0;
            return 204;
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # User Management Service routes
        location ~ ^/(auth|users|profiles|mentor-profiles|mentee-profiles|payment-methods) {
            limit_req zone=auth burst=20 nodelay;
            
            proxy_pass http://user_management;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # Chat Service routes
        location ~ ^/(chat|messages) {
            limit_req zone=api burst=50 nodelay;
            
            proxy_pass http://chat_service;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # WebSocket support
            proxy_buffering off;
            proxy_connect_timeout 30s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Video Service routes
        location ~ ^/(video|calls) {
            limit_req zone=api burst=30 nodelay;
            
            proxy_pass http://video_service;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Longer timeouts for video operations
            proxy_connect_timeout 60s;
            proxy_send_timeout 120s;
            proxy_read_timeout 120s;
        }

        # Meetings Service routes
        location ~ ^/(meetings|sessions) {
            limit_req zone=api burst=30 nodelay;
            
            proxy_pass http://meetings_service;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            proxy_connect_timeout 30s;
            proxy_send_timeout 45s;
            proxy_read_timeout 45s;
        }

        # Payment Service routes
        location ~ ^/(payments|transactions|subscriptions) {
            limit_req zone=api burst=10 nodelay;
            
            proxy_pass http://payment_service;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Longer timeouts for payment operations
            proxy_connect_timeout 45s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Safety & Moderation Service routes
        location ~ ^/(safety|moderation) {
            limit_req zone=api burst=100 nodelay;
            
            proxy_pass http://safety_service;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Fast timeouts for safety checks
            proxy_connect_timeout 15s;
            proxy_send_timeout 15s;
            proxy_read_timeout 15s;
        }

        # Default fallback
        location / {
            return 404 '{"error": "Service not found"}';
            add_header Content-Type application/json;
        }
    }
}

# Stream block for TCP/UDP load balancing (for WebRTC TURN server)
stream {
    upstream turn_servers {
        server coturn:3478;
    }

    server {
        listen 3478 udp;
        proxy_pass turn_servers;
        proxy_timeout 1s;
        proxy_responses 1;
    }
}